pipeline {
	agent any

	environment {
        // AWS VALIDATION 
		AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
		AWS_PROFILE           = "terraform"
        AWS_DEFAULT_REGION    = "us-east-1"
        // AWS S3 
        AWS_S3_BUCKET         = "movie-database-s3"
        ARTIFACT_NAME		  = "Dockerrun.aws.json"
		// AWS EB
        AWS_EB_APP_NAME 	  = "movie-database"
        AWS_EB_APP_VERSION	  = ${BUILD_ID}
        AWS_EB_ENVIRONMENT    = "Moviedatabase-env"
        // DOCKER INFO 
        DOCKERHUB_CREDENTIALS = credentials('docker-token')
        DOCKER_IMAGE_NAME	  = "nadaame/movie-database"
        DOCKER_IMAGE_TAGE     = "latest"
	}

	stages {
		stage('Build') {
			steps {
				sh 'docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAGE .'
			}
		}
		stage('Login') {
			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}
		stage('Push') {
			steps {
				sh 'docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAGE'
			}
		}
        stage('Deploy') {
            steps {
                sh 'aws configure set region $AWS_REGION'
                sh 'aws elasticbeanstalk create-application-version --application-name $AWS_EB_APP_NAME --version-label $AWS_EB_APP_VERSION --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=$ARTIFACT_NAME'
                sh 'aws elasticbeanstalk update-environment --application-name $AWS_EB_APP_NAME --environment-name $AWS_EB_ENVIRONMENT --version-label $AWS_EB_APP_VERSION'
            }
		}
    }
	post {
		always {
			sh 'docker logout'
		}
	}
}